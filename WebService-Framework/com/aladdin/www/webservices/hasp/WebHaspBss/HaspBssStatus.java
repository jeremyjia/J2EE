/**
 * HaspBssStatus.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.aladdin.www.webservices.hasp.WebHaspBss;

public class HaspBssStatus implements java.io.Serializable {
    private java.lang.String _value_;
    private static java.util.HashMap _table_ = new java.util.HashMap();

    // Constructor
    protected HaspBssStatus(java.lang.String value) {
        _value_ = value;
        _table_.put(_value_,this);
    }

    public static final java.lang.String _HASP_BA_OK = "HASP_BA_OK";
    public static final java.lang.String _HASP_BA_INVALID_HANDLE = "HASP_BA_INVALID_HANDLE";
    public static final java.lang.String _HASP_BA_WEBSERVICE_LOGIN_DOESNT_EXIST = "HASP_BA_WEBSERVICE_LOGIN_DOESNT_EXIST";
    public static final java.lang.String _HASP_BA_LOCAL_LOGIN_DOESNT_EXIST = "HASP_BA_LOCAL_LOGIN_DOESNT_EXIST";
    public static final java.lang.String _HASP_BA_ORDER_MAX_ACTIVATIONS_EXCEEDED = "HASP_BA_ORDER_MAX_ACTIVATIONS_EXCEEDED";
    public static final java.lang.String _HASP_BA_ORDER_NUMBER_OF_KEYS_EXCEEDED = "HASP_BA_ORDER_NUMBER_OF_KEYS_EXCEEDED";
    public static final java.lang.String _HASP_BA_INITIAL_FDB_FAILED = "HASP_BA_INITIAL_FDB_FAILED";
    public static final java.lang.String _HASP_BA_INVALID_AMOUNT_OF_KEYS = "HASP_BA_INVALID_AMOUNT_OF_KEYS";
    public static final java.lang.String _HASP_BA_INVALID_MAX_ACTIVATIONS = "HASP_BA_INVALID_MAX_ACTIVATIONS";
    public static final java.lang.String _HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES = "HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES";
    public static final java.lang.String _HASP_BA_INVALID_FREE_PARAMETER_VALUE = "HASP_BA_INVALID_FREE_PARAMETER_VALUE";
    public static final java.lang.String _HASP_BA_CANNOT_RUN_ON_64BIT_OPERATING_SYSTEM = "HASP_BA_CANNOT_RUN_ON_64BIT_OPERATING_SYSTEM";
    public static final java.lang.String _HASP_BA_CANNOT_CREATE_UPDATE_WITH_PRODUCT_KEYS_ORDER = "HASP_BA_CANNOT_CREATE_UPDATE_WITH_PRODUCT_KEYS_ORDER";
    public static final java.lang.String _HASP_BA_CANNOT_GENERATE_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER = "HASP_BA_CANNOT_GENERATE_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER";
    public static final java.lang.String _HASP_BA_CANNOT_GET_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER = "HASP_BA_CANNOT_GET_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_OUT_OF_SEGMENT_BOUNDARIES = "HASP_BA_FREE_MEMORY_SUBSEGMENT_OUT_OF_SEGMENT_BOUNDARIES";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_NO_SUBSEGMENTS_DEFINED = "HASP_BA_FREE_MEMORY_NO_SUBSEGMENTS_DEFINED";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_DOESNT_EXIST = "HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_DOESNT_EXIST";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_NEGATIVE = "HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_NEGATIVE";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_ZERO_OR_NEGATIVE = "HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_ZERO_OR_NEGATIVE";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_GREATER_THAN_SEGMENT_SIZE = "HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_GREATER_THAN_SEGMENT_SIZE";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_ISNT_CORRECT = "HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_ISNT_CORRECT";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_SIZE_ISNT_EQUAL_TO_SIZE = "HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_SIZE_ISNT_EQUAL_TO_SIZE";
    public static final java.lang.String _HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_LESS_THAN_SEGMENT_OFFSET = "HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_LESS_THAN_SEGMENT_OFFSET";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_MEMORY_SUBSEGMENT_OFFSET_EXCEEDED_SEGMENT_BOUNDARIES = "HASP_BA_SERVER_ORDER_MEMORY_SUBSEGMENT_OFFSET_EXCEEDED_SEGMENT_BOUNDARIES";
    public static final java.lang.String _HASP_BA_INVOKER_GENERAL_ERROR = "HASP_BA_INVOKER_GENERAL_ERROR";
    public static final java.lang.String _HASP_BA_INVOKER_INVALID_HANDLE = "HASP_BA_INVOKER_INVALID_HANDLE";
    public static final java.lang.String _HASP_BA_INVOKER_METHOD_NOT_DEFINED = "HASP_BA_INVOKER_METHOD_NOT_DEFINED";
    public static final java.lang.String _HASP_BA_INVOKER_REQUEST_HASH_IS_NULL = "HASP_BA_INVOKER_REQUEST_HASH_IS_NULL";
    public static final java.lang.String _HASP_BA_INVOKER_RESPONSE_HASH_IS_NULL = "HASP_BA_INVOKER_RESPONSE_HASH_IS_NULL";
    public static final java.lang.String _HASP_BA_INVOKER_ALLOC_TAGLIST_FAILED = "HASP_BA_INVOKER_ALLOC_TAGLIST_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_ENCODE_REQUEST_FAILED = "HASP_BA_INVOKER_ENCODE_REQUEST_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_CONNECTION_FAILED = "HASP_BA_INVOKER_CONNECTION_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_HTTP_ERROR = "HASP_BA_INVOKER_HTTP_ERROR";
    public static final java.lang.String _HASP_BA_INVOKER_DECODE_RESPONSE_FAILED = "HASP_BA_INVOKER_DECODE_RESPONSE_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_NO_STATUS = "HASP_BA_INVOKER_NO_STATUS";
    public static final java.lang.String _HASP_BA_INVOKER_INVALID_STATUS = "HASP_BA_INVOKER_INVALID_STATUS";
    public static final java.lang.String _HASP_BA_INVOKER_SERVER_ERROR = "HASP_BA_INVOKER_SERVER_ERROR";
    public static final java.lang.String _HASP_BA_INVOKER_NOT_LOGGEDIN = "HASP_BA_INVOKER_NOT_LOGGEDIN";
    public static final java.lang.String _HASP_BA_INVOKER_INVALID_SERVICE = "HASP_BA_INVOKER_INVALID_SERVICE";
    public static final java.lang.String _HASP_BA_INVOKER_HASH_ALLOCATION_FAILED = "HASP_BA_INVOKER_HASH_ALLOCATION_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_NO_SESSION_ID_RETURNED = "HASP_BA_INVOKER_NO_SESSION_ID_RETURNED";
    public static final java.lang.String _HASP_BA_INVOKER_NO_SERVICES_RETURNED = "HASP_BA_INVOKER_NO_SERVICES_RETURNED";
    public static final java.lang.String _HASP_BA_INVOKER_LOGIN_FAILED = "HASP_BA_INVOKER_LOGIN_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_USER_IS_LOCKED = "HASP_BA_INVOKER_USER_IS_LOCKED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_LOAD_LIBRARY_FAILED = "HASP_BA_INVOKER_INET_ERROR_LOAD_LIBRARY_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_GET_PROC_ADRESS_FAILED = "HASP_BA_INVOKER_INET_ERROR_GET_PROC_ADRESS_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_INITIALIZATION_FAILED = "HASP_BA_INVOKER_INET_ERROR_INITIALIZATION_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_SET_CONNECT_TIMEOUT_FAILED = "HASP_BA_INVOKER_INET_ERROR_SET_CONNECT_TIMEOUT_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_SET_SEND_TIMEOUT_FAILED = "HASP_BA_INVOKER_INET_ERROR_SET_SEND_TIMEOUT_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_SET_RECEIVE_TIMEOUT_FAILED = "HASP_BA_INVOKER_INET_ERROR_SET_RECEIVE_TIMEOUT_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_INVALID_URL = "HASP_BA_INVOKER_INET_ERROR_INVALID_URL";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_INVALID_PORT = "HASP_BA_INVOKER_INET_ERROR_INVALID_PORT";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_INVALID_SERVER_NAME = "HASP_BA_INVOKER_INET_ERROR_INVALID_SERVER_NAME";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_CONNECT_FAILED = "HASP_BA_INVOKER_INET_ERROR_CONNECT_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_OPEN_REQUEST_FAILED = "HASP_BA_INVOKER_INET_ERROR_OPEN_REQUEST_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_SEND_REQUEST_FAILED = "HASP_BA_INVOKER_INET_ERROR_SEND_REQUEST_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_BUFFER_REALOC_FAILED = "HASP_BA_INVOKER_INET_ERROR_BUFFER_REALOC_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_INTERNET_READ_FAILED = "HASP_BA_INVOKER_INET_ERROR_INTERNET_READ_FAILED";
    public static final java.lang.String _HASP_BA_INVOKER_INET_ERROR_HTTP_QUERY_INFO_FAILED = "HASP_BA_INVOKER_INET_ERROR_HTTP_QUERY_INFO_FAILED";
    public static final java.lang.String _HASP_BA_SERVER_GENERAL_SYSTEM_FAILURE = "HASP_BA_SERVER_GENERAL_SYSTEM_FAILURE";
    public static final java.lang.String _HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_UPDATE = "HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_UPDATE";
    public static final java.lang.String _HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_UPDATE = "HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_UPDATE";
    public static final java.lang.String _HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_DELETE = "HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_DELETE";
    public static final java.lang.String _HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_DELETE = "HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_DELETE";
    public static final java.lang.String _HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_UPDATE = "HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_UPDATE";
    public static final java.lang.String _HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_DELETE = "HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_DELETE";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_UPDATE = "HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_UPDATE";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_DELETE = "HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_DELETE";
    public static final java.lang.String _HASP_BA_SERVER_CUSTOMER_ALREADY_HAVE_ORDERS = "HASP_BA_SERVER_CUSTOMER_ALREADY_HAVE_ORDERS";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_DOES_NOT_MATCH_ITS_TYPE_NOT_SUPPLIED = "HASP_BA_SERVER_PARAMETER_DOES_NOT_MATCH_ITS_TYPE_NOT_SUPPLIED";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST = "HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_IS_NOT_UNIQUE = "HASP_BA_SERVER_PARAMETER_IS_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_SERVER_MEMORY_SEGMENT_RELATED_TO_INVALID_MEMORY = "HASP_BA_SERVER_MEMORY_SEGMENT_RELATED_TO_INVALID_MEMORY";
    public static final java.lang.String _HASP_BA_SERVER_CLIENT_CAN_NOT_BE_DELETED_ALREADY_HAS_KEYS = "HASP_BA_SERVER_CLIENT_CAN_NOT_BE_DELETED_ALREADY_HAS_KEYS";
    public static final java.lang.String _HASP_BA_SERVER_DISTRIBUTIONPOINT_CAN_NOT_BE_DELETED_ALREADY_HAS_ORDERS = "HASP_BA_SERVER_DISTRIBUTIONPOINT_CAN_NOT_BE_DELETED_ALREADY_HAS_ORDERS";
    public static final java.lang.String _HASP_BA_SERVER_FEATURE_NOT_EMBEDDED_IN_PRODUCT = "HASP_BA_SERVER_FEATURE_NOT_EMBEDDED_IN_PRODUCT";
    public static final java.lang.String _HASP_BA_SERVER_PRODUCT_NOT_EMBEDDED_IN_ORDER = "HASP_BA_SERVER_PRODUCT_NOT_EMBEDDED_IN_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_NOT_DISTRIBUTED = "HASP_BA_SERVER_ORDER_NOT_DISTRIBUTED";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_MEMORY_SEGMENT_EXCEEDED_BOUNDARIES = "HASP_BA_SERVER_ORDER_MEMORY_SEGMENT_EXCEEDED_BOUNDARIES";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_CANNOT_BE_FINALIZED_PARAMETER_MISSING = "HASP_BA_SERVER_ORDER_CANNOT_BE_FINALIZED_PARAMETER_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_CAN_NOT_UNFINALIZE_ORDER = "HASP_BA_SERVER_CAN_NOT_UNFINALIZE_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_CANT_CREATE_PRODUCT_KEYS_ORDER_NOT_FINALIZED = "HASP_BA_SERVER_CANT_CREATE_PRODUCT_KEYS_ORDER_NOT_FINALIZED";
    public static final java.lang.String _HASP_BA_SERVER_PRODUCTKEYS_IS_EQUAL_TO_KEYCOUNT_CANNOT_INSERT_PRODUCTKEYS = "HASP_BA_SERVER_PRODUCTKEYS_IS_EQUAL_TO_KEYCOUNT_CANNOT_INSERT_PRODUCTKEYS";
    public static final java.lang.String _HASP_BA_SERVER_CANT_FORCE_COMPLETE_ORDER_NOT_DISTRIBUTED = "HASP_BA_SERVER_CANT_FORCE_COMPLETE_ORDER_NOT_DISTRIBUTED";
    public static final java.lang.String _HASP_BA_SERVER_FILE_SIZE_DIFFERENT_THEN_SUPPLIED_DATA_LENGTH = "HASP_BA_SERVER_FILE_SIZE_DIFFERENT_THEN_SUPPLIED_DATA_LENGTH";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_IS_NOT_INITIAL = "HASP_BA_SERVER_ORDER_IS_NOT_INITIAL";
    public static final java.lang.String _HASP_BA_SERVER_CAN_NOT_GET_PRODUCTKEYS_FOR_DISTRIBUTIONPOINT = "HASP_BA_SERVER_CAN_NOT_GET_PRODUCTKEYS_FOR_DISTRIBUTIONPOINT";
    public static final java.lang.String _HASP_BA_SERVER_MORE_UP_TO_DATE_BATCHFILE_EXISTS = "HASP_BA_SERVER_MORE_UP_TO_DATE_BATCHFILE_EXISTS";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_COLLISION_ENCOUNTERED = "HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_COLLISION_ENCOUNTERED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_ALREADY_FINALIZED = "HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_ALREADY_FINALIZED";
    public static final java.lang.String _HASP_BA_SERVER_WRONG_KEY_STATUS = "HASP_BA_SERVER_WRONG_KEY_STATUS";
    public static final java.lang.String _HASP_BA_SERVER_KEY_ACTIVATED_CANNOT_REMOVE_FROM_ORDER = "HASP_BA_SERVER_KEY_ACTIVATED_CANNOT_REMOVE_FROM_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_FORCE_COMPLETE_ORDER_NOT_FINALIZED_NOR_SUPPLIED = "HASP_BA_SERVER_CANNOT_FORCE_COMPLETE_ORDER_NOT_FINALIZED_NOR_SUPPLIED";
    public static final java.lang.String _HASP_BA_SERVER_KEY_IS_ALREADY_ASSOCIATED_WITH_ORDER = "HASP_BA_SERVER_KEY_IS_ALREADY_ASSOCIATED_WITH_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_KEY_NOT_AUTHORIZED_FOR_THIS_ORDER = "HASP_BA_SERVER_KEY_NOT_AUTHORIZED_FOR_THIS_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_FINALIZE_ORDER_FAILED_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES = "HASP_BA_SERVER_FINALIZE_ORDER_FAILED_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_USE_C2V_NOT_UP_TO_DATE = "HASP_BA_SERVER_FAILED_TO_USE_C2V_NOT_UP_TO_DATE";
    public static final java.lang.String _HASP_BA_SERVER_INCONSISTENT_COUNTERS = "HASP_BA_SERVER_INCONSISTENT_COUNTERS";
    public static final java.lang.String _HASP_BA_SERVER_FAIL_CREATE_V2C_NO_ORDER_AVAILABLE_FOR_KEY = "HASP_BA_SERVER_FAIL_CREATE_V2C_NO_ORDER_AVAILABLE_FOR_KEY";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_EXTRACT_C2V_UNKNOWN_KEY = "HASP_BA_SERVER_FAILED_EXTRACT_C2V_UNKNOWN_KEY";
    public static final java.lang.String _HASP_BA_SERVER_PRODUCTKEY_LOCKED_OR_NO_EXIST = "HASP_BA_SERVER_PRODUCTKEY_LOCKED_OR_NO_EXIST";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_AT_INITIAL_STATE = "HASP_BA_SERVER_ORDER_AT_INITIAL_STATE";
    public static final java.lang.String _HASP_BA_SERVER_CANT_CREATE_FACTORY_OBJECT = "HASP_BA_SERVER_CANT_CREATE_FACTORY_OBJECT";
    public static final java.lang.String _HASP_BA_SERVER_FILE_OUT_OF_RANGE = "HASP_BA_SERVER_FILE_OUT_OF_RANGE";
    public static final java.lang.String _HASP_BA_SERVER_ACTIVATION_EXPIRED_FOR_PRODUCT_KEY = "HASP_BA_SERVER_ACTIVATION_EXPIRED_FOR_PRODUCT_KEY";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_ACTIVATING_SL_KEY_PRODUCT_WITH_HL_KEY_ONLY_PRODUCT = "HASP_BA_SERVER_FAILED_ACTIVATING_SL_KEY_PRODUCT_WITH_HL_KEY_ONLY_PRODUCT";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_ACTIVATING_HL_KEY_PRODUCT_WITH_SL_KEY_ONLY_PRODUCT = "HASP_BA_SERVER_FAILED_ACTIVATING_HL_KEY_PRODUCT_WITH_SL_KEY_ONLY_PRODUCT";
    public static final java.lang.String _HASP_BA_SERVER_UNACKNOWLEDGED_ORDERS_EXIST_AND_MUST_BE_BURNED_FIRST = "HASP_BA_SERVER_UNACKNOWLEDGED_ORDERS_EXIST_AND_MUST_BE_BURNED_FIRST";
    public static final java.lang.String _HASP_BA_SERVER_WRONG_DATA_FORMAT = "HASP_BA_SERVER_WRONG_DATA_FORMAT";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_LOCATING_CONTAINER_IDENTIFIER_IN_C2V = "HASP_BA_SERVER_FAILED_LOCATING_CONTAINER_IDENTIFIER_IN_C2V";
    public static final java.lang.String _HASP_BA_SERVER_KEY_DOESNT_EXIST = "HASP_BA_SERVER_KEY_DOESNT_EXIST";
    public static final java.lang.String _HASP_BA_CANNOT_EXTRACT_FINGERPRINT_FROM_HL_KEY = "HASP_BA_CANNOT_EXTRACT_FINGERPRINT_FROM_HL_KEY";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_LOCATING_BATCH_IDENTIFIER_IN_C2V = "HASP_BA_SERVER_FAILED_LOCATING_BATCH_IDENTIFIER_IN_C2V";
    public static final java.lang.String _HASP_BA_SERVER_NO_INPUT_PARAMETERS_WAS_SUPPLIED = "HASP_BA_SERVER_NO_INPUT_PARAMETERS_WAS_SUPPLIED";
    public static final java.lang.String _HASP_BA_SERVER_WRONG_INPUT_PARAMETER = "HASP_BA_SERVER_WRONG_INPUT_PARAMETER";
    public static final java.lang.String _HASP_BA_SERVER_WRONG_USERNAME_OR_PASSWORD = "HASP_BA_SERVER_WRONG_USERNAME_OR_PASSWORD";
    public static final java.lang.String _HASP_BA_SERVER_CAN_NOT_PRODUCE_NON_FINALIZED_ORDER = "HASP_BA_SERVER_CAN_NOT_PRODUCE_NON_FINALIZED_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_PRODUCT_ALREADY_ACTIVATED_WITH_ANOTHER_KEY = "HASP_BA_SERVER_PRODUCT_ALREADY_ACTIVATED_WITH_ANOTHER_KEY";
    public static final java.lang.String _HASP_BA_SERVER_INSUFFICIENT_PRIVILEGES = "HASP_BA_SERVER_INSUFFICIENT_PRIVILEGES";
    public static final java.lang.String _HASP_BA_SERVER_SESSION_TIME_RUN_OUT = "HASP_BA_SERVER_SESSION_TIME_RUN_OUT";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_LOAD_AUTHORIZATION_FILE = "HASP_BA_SERVER_FAILED_TO_LOAD_AUTHORIZATION_FILE";
    public static final java.lang.String _HASP_BA_SERVER_USER_LOCKED = "HASP_BA_SERVER_USER_LOCKED";
    public static final java.lang.String _HASP_BA_SERVER_UNKNOWN_KEY_IN_LICENSE_PARAMETER_DATA_SET = "HASP_BA_SERVER_UNKNOWN_KEY_IN_LICENSE_PARAMETER_DATA_SET";
    public static final java.lang.String _HASP_BA_SERVER_UNDEFINED_VALUE_IN_LICENSE_PARAMETER_DATA_SET = "HASP_BA_SERVER_UNDEFINED_VALUE_IN_LICENSE_PARAMETER_DATA_SET";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_EXPORT_DEFINED = "HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_EXPORT_DEFINED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_COUNT_DEFINED = "HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_COUNT_DEFINED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_SEATS_IN_CONCURRENCY_DEFINED = "HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_SEATS_IN_CONCURRENCY_DEFINED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_CONCURRENCY_ACTION_DEFINED = "HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_CONCURRENCY_ACTION_DEFINED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_ACTION_DEFINED = "HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_ACTION_DEFINED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_LICENSE_TYPE_DEFINED = "HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_LICENSE_TYPE_DEFINED";
    public static final java.lang.String _HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_CONCURRENCY_ACTION_NODE_FOUND = "HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_CONCURRENCY_ACTION_NODE_FOUND";
    public static final java.lang.String _HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_ACTION_NODE_FOUND = "HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_ACTION_NODE_FOUND";
    public static final java.lang.String _HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_TYPE_NODE_FOUND = "HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_TYPE_NODE_FOUND";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_CONTAINER = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_CONTAINER";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_STREAM = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_STREAM";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_OPEN_READER_STREAM = "HASP_BA_SERVER_FAILED_TO_OPEN_READER_STREAM";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_READ_C2V_INTO_STREAM = "HASP_BA_SERVER_FAILED_TO_READ_C2V_INTO_STREAM";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_OPEN_WRITER_STREAM = "HASP_BA_SERVER_FAILED_TO_OPEN_WRITER_STREAM";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_V2C_FROM_CONTAINER = "HASP_BA_SERVER_FAILED_TO_CREATE_V2C_FROM_CONTAINER";
    public static final java.lang.String _HASP_BA_SERVER_BATCH_ID_PARAMETER_IS_MISSING = "HASP_BA_SERVER_BATCH_ID_PARAMETER_IS_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_KEYTYPE_PARAMETER_IS_MISSING = "HASP_BA_SERVER_KEYTYPE_PARAMETER_IS_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_COUNTER_PARAMETER_IS_MISSING = "HASP_BA_SERVER_COUNTER_PARAMETER_IS_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_HASP_SL_KEYCOLOR_OR_ID_PARAMETER_MISSING = "HASP_BA_SERVER_HASP_SL_KEYCOLOR_OR_ID_PARAMETER_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_PARSING_LICENSE_DATASET_TO_LICENSE_XML = "HASP_BA_SERVER_FAILED_PARSING_LICENSE_DATASET_TO_LICENSE_XML";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_OBJECT = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_OBJECT";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_ADD_LICENSE_TO_CONTAINER = "HASP_BA_SERVER_FAILED_TO_ADD_LICENSE_TO_CONTAINER";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_XML = "HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_XML";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_LICENSE = "HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_ADD_MEMORY_LICENSE_TO_CONTAINER = "HASP_BA_SERVER_FAILED_TO_ADD_MEMORY_LICENSE_TO_CONTAINER";
    public static final java.lang.String _HASP_BA_SERVER_C2V_PARAMETER_IS_MISSING = "HASP_BA_SERVER_C2V_PARAMETER_IS_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_FACTORY = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_FACTORY";
    public static final java.lang.String _HASP_BA_SERVER_LICENSE_CONTAINER_INVALID = "HASP_BA_SERVER_LICENSE_CONTAINER_INVALID";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_PROPERTY_OBJECT = "HASP_BA_SERVER_FAILED_TO_CREATE_PROPERTY_OBJECT";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_CLASSIC_PARAMETER_MISSING = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_CLASSIC_PARAMETER_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_BATCH_PARAMETER_MISSING = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_BATCH_PARAMETER_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_ALADDIN_PARAMETER_MISSING = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_ALADDIN_PARAMETER_MISSING";
    public static final java.lang.String _HASP_BA_SERVER_INVALID_LICENSE = "HASP_BA_SERVER_INVALID_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_INVALID_MEMORY_LICENSE = "HASP_BA_SERVER_INVALID_MEMORY_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_REMOVE_LICENSE = "HASP_BA_SERVER_FAILED_TO_CREATE_REMOVE_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CALCULATE_CURRENT_LICENSE = "HASP_BA_SERVER_FAILED_TO_CALCULATE_CURRENT_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_CURRENT_LICENSE_NOT_FOUND = "HASP_BA_SERVER_CURRENT_LICENSE_NOT_FOUND";
    public static final java.lang.String _HASP_BA_SERVER_NON_SET_LICENSE_ON_CLEAN_KEY = "HASP_BA_SERVER_NON_SET_LICENSE_ON_CLEAN_KEY";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCH_ID_FROM_C2V = "HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCH_ID_FROM_C2V";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCHID = "HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCHID";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_EXTRACT_HASPID = "HASP_BA_SERVER_FAILED_TO_EXTRACT_HASPID";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_APPLY_ADD_LICENSE = "HASP_BA_SERVER_FAILED_APPLY_ADD_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_INCONSISTENT_FEATURE_HISTORY = "HASP_BA_SERVER_INCONSISTENT_FEATURE_HISTORY";
    public static final java.lang.String _HASP_BA_SERVER_UNKNOWN_CONCURRENCY_TYPE = "HASP_BA_SERVER_UNKNOWN_CONCURRENCY_TYPE";
    public static final java.lang.String _HASP_BA_SERVER_LICENSE_DATASET_PARAMETER_NOT_DEFINED = "HASP_BA_SERVER_LICENSE_DATASET_PARAMETER_NOT_DEFINED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_GET_XML_ROOT_ELEMENT = "HASP_BA_SERVER_COULD_NOT_GET_XML_ROOT_ELEMENT";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_XML_DOCUMENT_OBJECT = "HASP_BA_SERVER_FAILED_TO_CREATE_XML_DOCUMENT_OBJECT";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_CREATE_DOM_PARSER = "HASP_BA_SERVER_COULD_NOT_CREATE_DOM_PARSER";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_XML_ELEMENT = "HASP_BA_SERVER_FAILED_TO_CREATE_XML_ELEMENT";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_DATASET = "HASP_BA_SERVER_FAILED_TO_CREATE_DATASET";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_DATASET_OF_LICENSE_PARAMETERS = "HASP_BA_SERVER_FAILED_TO_CREATE_DATASET_OF_LICENSE_PARAMETERS";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_EXTRACT_LICENSE_TYPE_FROM_DATASET = "HASP_BA_SERVER_FAILED_TO_EXTRACT_LICENSE_TYPE_FROM_DATASET";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_XML = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_XML";
    public static final java.lang.String _HASP_BA_SERVER_IDL_FILE_NOT_FOUND = "HASP_BA_SERVER_IDL_FILE_NOT_FOUND";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_REQUIRED = "HASP_BA_SERVER_PARAMETER_REQUIRED";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_LENGTH_EXCEEDED = "HASP_BA_SERVER_PARAMETER_LENGTH_EXCEEDED";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_DIDNT_MATCH_MASK_OR_VALIDATION_SUBROUTINE = "HASP_BA_SERVER_PARAMETER_DIDNT_MATCH_MASK_OR_VALIDATION_SUBROUTINE";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_CANT_BE_EMPTY = "HASP_BA_SERVER_PARAMETER_CANT_BE_EMPTY";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST_IN_DB = "HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST_IN_DB";
    public static final java.lang.String _HASP_BA_SERVER_PARAMETER_NOT_UNIQUE = "HASP_BA_SERVER_PARAMETER_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_SERVER_NO_DATA_FOUND = "HASP_BA_SERVER_NO_DATA_FOUND";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CONNECT_ALADDIN_MASTER = "HASP_BA_SERVER_FAILED_TO_CONNECT_ALADDIN_MASTER";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CONNECT_MASTERS_FEATURE = "HASP_BA_SERVER_FAILED_TO_CONNECT_MASTERS_FEATURE";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_PRODUCTS = "HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_PRODUCTS";
    public static final java.lang.String _HASP_BA_SERVER_ACTION_ON_DISABLED_C2V = "HASP_BA_SERVER_ACTION_ON_DISABLED_C2V";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_CLEAR_HL_KEY = "HASP_BA_SERVER_CANNOT_CLEAR_HL_KEY";
    public static final java.lang.String _HASP_BA_SERVER_INCOMPATIBLE_VERSION = "HASP_BA_SERVER_INCOMPATIBLE_VERSION";
    public static final java.lang.String _HASP_BA_INIT_INVOKER_FAILED = "HASP_BA_INIT_INVOKER_FAILED";
    public static final java.lang.String _HASP_BA_NO_BATCHES = "HASP_BA_NO_BATCHES";
    public static final java.lang.String _HASP_BA_NO_USERS = "HASP_BA_NO_USERS";
    public static final java.lang.String _HASP_BA_NO_ROLES = "HASP_BA_NO_ROLES";
    public static final java.lang.String _HASP_BA_NO_FEATURES = "HASP_BA_NO_FEATURES";
    public static final java.lang.String _HASP_BA_NO_FEATURESETS = "HASP_BA_NO_FEATURESETS";
    public static final java.lang.String _HASP_BA_NO_PRODUCTS = "HASP_BA_NO_PRODUCTS";
    public static final java.lang.String _HASP_BA_NO_PRODUCT_FEATURES = "HASP_BA_NO_PRODUCT_FEATURES";
    public static final java.lang.String _HASP_BA_NO_PRODUCT_FEATURESETS = "HASP_BA_NO_PRODUCT_FEATURESETS";
    public static final java.lang.String _HASP_BA_NO_ORDERS = "HASP_BA_NO_ORDERS";
    public static final java.lang.String _HASP_BA_NO_MEMORIES = "HASP_BA_NO_MEMORIES";
    public static final java.lang.String _HASP_BA_NO_MEMORY_DOMAIN_OBJECTS = "HASP_BA_NO_MEMORY_DOMAIN_OBJECTS";
    public static final java.lang.String _HASP_BA_NO_MEMORY_SEGMENTS = "HASP_BA_NO_MEMORY_SEGMENTS";
    public static final java.lang.String _HASP_BA_NO_CUSTOMERS = "HASP_BA_NO_CUSTOMERS";
    public static final java.lang.String _HASP_BA_NO_DOMAIN_OBJECTS = "HASP_BA_NO_DOMAIN_OBJECTS";
    public static final java.lang.String _HASP_BA_NO_DISTRIBUTION_POINTS = "HASP_BA_NO_DISTRIBUTION_POINTS";
    public static final java.lang.String _HASP_BA_NO_KEYS = "HASP_BA_NO_KEYS";
    public static final java.lang.String _HASP_BA_NO_KEY_TYPES = "HASP_BA_NO_KEY_TYPES";
    public static final java.lang.String _HASP_BA_NO_DEVICE_TYPES = "HASP_BA_NO_DEVICE_TYPES";
    public static final java.lang.String _HASP_BA_NO_PRODUCT_KEYS = "HASP_BA_NO_PRODUCT_KEYS";
    public static final java.lang.String _HASP_BA_NO_ACTIVITIES = "HASP_BA_NO_ACTIVITIES";
    public static final java.lang.String _HASP_BA_INVALID_INPUT = "HASP_BA_INVALID_INPUT";
    public static final java.lang.String _HASP_BA_INVALID_BATCH_ID = "HASP_BA_INVALID_BATCH_ID";
    public static final java.lang.String _HASP_BA_FEATURESET_NOT_FREE = "HASP_BA_FEATURESET_NOT_FREE";
    public static final java.lang.String _HASP_BA_ORDER_NOT_FREE = "HASP_BA_ORDER_NOT_FREE";
    public static final java.lang.String _HASP_BA_BATCH_ALREADY_EXIST = "HASP_BA_BATCH_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_ROLE_ALREADY_EXIST = "HASP_BA_ROLE_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_CUSTOMER_ALREADY_EXIST = "HASP_BA_CUSTOMER_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_FEATURE_ALREADY_EXIST = "HASP_BA_FEATURE_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_FEATURESET_ALREADY_EXIST = "HASP_BA_FEATURESET_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_ALREADY_EXIST = "HASP_BA_PRODUCT_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_FEATURE_ALREADY_EXIST = "HASP_BA_PRODUCT_FEATURE_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_FEATURESET_ALREADY_EXIST = "HASP_BA_PRODUCT_FEATURESET_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_ORDER_ALREADY_EXIST = "HASP_BA_ORDER_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_MEMORY_ALREADY_EXIST = "HASP_BA_MEMORY_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_MEMORY_SEGMENT_ALREADY_EXIST = "HASP_BA_MEMORY_SEGMENT_ALREADY_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_FEATURE_CORRUPTED = "HASP_BA_PRODUCT_FEATURE_CORRUPTED";
    public static final java.lang.String _HASP_BA_PRODUCT_FEATURESET_CORRUPTED = "HASP_BA_PRODUCT_FEATURESET_CORRUPTED";
    public static final java.lang.String _HASP_BA_BATCH_DOES_NOT_EXIST = "HASP_BA_BATCH_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_FEATURE_DOES_NOT_EXIST = "HASP_BA_FEATURE_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_FEATURESET_DOES_NOT_EXIST = "HASP_BA_FEATURESET_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_FEATURE_LICENSE_DOES_NOT_EXIST = "HASP_BA_FEATURE_LICENSE_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_FEATURE_FREE_PARAMETER_DOES_NOT_EXIST = "HASP_BA_FEATURE_FREE_PARAMETER_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_DOES_NOT_EXIST = "HASP_BA_PRODUCT_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_FEATURE_DOES_NOT_EXIST = "HASP_BA_PRODUCT_FEATURE_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_ACTION_DOES_NOT_EXIST = "HASP_BA_PRODUCT_ACTION_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_SEQUENCE_DOES_NOT_EXIST = "HASP_BA_PRODUCT_SEQUENCE_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_FEATURESET_DOES_NOT_EXIST = "HASP_BA_PRODUCT_FEATURESET_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_ORDER_DOES_NOT_EXIST = "HASP_BA_ORDER_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_ORDER_PRODUCT_NOT_EXIST = "HASP_BA_ORDER_PRODUCT_NOT_EXIST";
    public static final java.lang.String _HASP_BA_USER_DOES_NOT_EXIST = "HASP_BA_USER_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_MEMORY_DOES_NOT_EXIST = "HASP_BA_MEMORY_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_MEMORY_SEGMENTS_DOES_NOT_EXIST = "HASP_BA_MEMORY_SEGMENTS_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_CUSTOMER_DOES_NOT_EXIST = "HASP_BA_CUSTOMER_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_KEY_DOES_NOT_EXIST = "HASP_BA_KEY_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_PRODUCT_LOCKED_IN_EDIT = "HASP_BA_PRODUCT_LOCKED_IN_EDIT";
    public static final java.lang.String _HASP_BA_ORDER_LOCKED_IN_EDIT = "HASP_BA_ORDER_LOCKED_IN_EDIT";
    public static final java.lang.String _HASP_BA_MEMORY_LOCKED_IN_EDIT = "HASP_BA_MEMORY_LOCKED_IN_EDIT";
    public static final java.lang.String _HASP_BA_USER_LOCKED_IN_EDIT = "HASP_BA_USER_LOCKED_IN_EDIT";
    public static final java.lang.String _HASP_BA_CUSTOMER_LOCKED_IN_EDIT = "HASP_BA_CUSTOMER_LOCKED_IN_EDIT";
    public static final java.lang.String _HASP_BA_PRODUCT_NOT_IN_EDIT_MODE = "HASP_BA_PRODUCT_NOT_IN_EDIT_MODE";
    public static final java.lang.String _HASP_BA_ORDER_NOT_IN_EDIT_MODE = "HASP_BA_ORDER_NOT_IN_EDIT_MODE";
    public static final java.lang.String _HASP_BA_MEMORY_NOT_IN_EDIT_MODE = "HASP_BA_MEMORY_NOT_IN_EDIT_MODE";
    public static final java.lang.String _HASP_BA_USER_NOT_IN_EDIT_MODE = "HASP_BA_USER_NOT_IN_EDIT_MODE";
    public static final java.lang.String _HASP_BA_CUSTOMER_NOT_IN_EDIT_MODE = "HASP_BA_CUSTOMER_NOT_IN_EDIT_MODE";
    public static final java.lang.String _HASP_BA_FEATURE_IDENTIFIER_NOT_AVAILABLE = "HASP_BA_FEATURE_IDENTIFIER_NOT_AVAILABLE";
    public static final java.lang.String _HASP_BA_BATCH_NAME_IS_NOT_UNIQUE = "HASP_BA_BATCH_NAME_IS_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_FEATURE_NAME_IS_NOT_UNIQUE = "HASP_BA_FEATURE_NAME_IS_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_FEATURESET_NAME_IS_NOT_UNIQUE = "HASP_BA_FEATURESET_NAME_IS_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_PRODUCT_NAME_IS_NOT_UNIQUE = "HASP_BA_PRODUCT_NAME_IS_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_USER_NAME_IS_NOT_UNIQUE = "HASP_BA_USER_NAME_IS_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_CUSTOMER_NAME_IS_NOT_UNIQUE = "HASP_BA_CUSTOMER_NAME_IS_NOT_UNIQUE";
    public static final java.lang.String _HASP_BA_ORDER_NOT_COMPATIBLE_WITH_KEY = "HASP_BA_ORDER_NOT_COMPATIBLE_WITH_KEY";
    public static final java.lang.String _HASP_BA_NO_KEYS_IN_ORDER = "HASP_BA_NO_KEYS_IN_ORDER";
    public static final java.lang.String _HASP_BA_CANNOT_FINALIZE_ACTUAL_KEYS_COUNT_IN_UPDATE_ORDER_DOESNT_EQUAL_TO_REQUIRED_KEYS_COUNT = "HASP_BA_CANNOT_FINALIZE_ACTUAL_KEYS_COUNT_IN_UPDATE_ORDER_DOESNT_EQUAL_TO_REQUIRED_KEYS_COUNT";
    public static final java.lang.String _HASP_BA_INVALID_MAX_ACTIVATION_KEYS = "HASP_BA_INVALID_MAX_ACTIVATION_KEYS";
    public static final java.lang.String _HASP_BA_PRODUCT_KEY_DOES_NOT_EXIST = "HASP_BA_PRODUCT_KEY_DOES_NOT_EXIST";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_CHECK_IN_PROVISIONAL_C2V = "HASP_BA_SERVER_CANNOT_CHECK_IN_PROVISIONAL_C2V";
    public static final java.lang.String _HASP_BA_GENERAL_ERROR = "HASP_BA_GENERAL_ERROR";
    public static final java.lang.String _HASP_BA_UNSPECIFIED = "HASP_BA_UNSPECIFIED";
    public static final java.lang.String _HASP_BA_SERVER_KEY_DOES_NOT_MATCH_ORDER = "HASP_BA_SERVER_KEY_DOES_NOT_MATCH_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_KEY_AND_ORDER_MISMATCH = "HASP_BA_SERVER_KEY_AND_ORDER_MISMATCH";
    public static final java.lang.String _HASP_BA_SERVER_ORDER_WITH_NO_KEY_SPECIFIED = "HASP_BA_SERVER_ORDER_WITH_NO_KEY_SPECIFIED";
    public static final java.lang.String _HASP_BA_SERVER_NO_KEY_MATCHES_LICENSE = "HASP_BA_SERVER_NO_KEY_MATCHES_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_ADD_LICENSE = "HASP_BA_SERVER_FAILED_TO_ADD_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_ADD_MEMORY = "HASP_BA_SERVER_FAILED_TO_ADD_MEMORY";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE = "HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE";
    public static final java.lang.String _HASP_BA_SERVER_FAILED_TO_CREATE_V2C = "HASP_BA_SERVER_FAILED_TO_CREATE_V2C";
    public static final java.lang.String _HASP_BA_SERVER_VENDOR_MISMATCH_BETWEEN_ORDER_AND_C2V = "HASP_BA_SERVER_VENDOR_MISMATCH_BETWEEN_ORDER_AND_C2V";
    public static final java.lang.String _HASP_BA_UNKNOWN_FORMAT_TYPE = "HASP_BA_UNKNOWN_FORMAT_TYPE";
    public static final java.lang.String _HASP_BA_INVALID_KEY_ID = "HASP_BA_INVALID_KEY_ID";
    public static final java.lang.String _HASP_BA_DEFINED_LICENSE_PARAMETERS_MISSING = "HASP_BA_DEFINED_LICENSE_PARAMETERS_MISSING";
    public static final java.lang.String _HASP_BA_DEFINED_LICENSE_NOT_DETACHABLE = "HASP_BA_DEFINED_LICENSE_NOT_DETACHABLE";
    public static final java.lang.String _HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_VIRTUAL_MACHINE = "HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_VIRTUAL_MACHINE";
    public static final java.lang.String _HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_NETWORK = "HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_NETWORK";
    public static final java.lang.String _HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_COUNT = "HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_COUNT";
    public static final java.lang.String _HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_TYPE = "HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_TYPE";
    public static final java.lang.String _HASP_BA_DEFINED_LICENSE_DOES_NOT_ALLOW_FREE_PARAMETERS = "HASP_BA_DEFINED_LICENSE_DOES_NOT_ALLOW_FREE_PARAMETERS";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_CREATE_EXECUTABLE_FILE_FROM_V2C = "HASP_BA_SERVER_CANNOT_CREATE_EXECUTABLE_FILE_FROM_V2C";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_INVALID_HL_KEY_TYPE = "HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_INVALID_HL_KEY_TYPE";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_ORDER_NOT_FINALIZED = "HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_ORDER_NOT_FINALIZED";
    public static final java.lang.String _HASP_BA_SERVER_CONSOLIDATOR_FAILED_TO_ADD_ZERO_VALUE = "HASP_BA_SERVER_CONSOLIDATOR_FAILED_TO_ADD_ZERO_VALUE";
    public static final java.lang.String _HASP_BA_SERVER_CONSOLIDATOR_CONTAINS_INVALID_LICENSE_PARAMETER = "HASP_BA_SERVER_CONSOLIDATOR_CONTAINS_INVALID_LICENSE_PARAMETER";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_FINALIZE_WITH_ALL_FEATURES_EXCLUDED = "HASP_BA_SERVER_CANNOT_FINALIZE_WITH_ALL_FEATURES_EXCLUDED";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_ADD_OBSOLETE_CUSTOMER_TO_ORDER = "HASP_BA_SERVER_CANNOT_ADD_OBSOLETE_CUSTOMER_TO_ORDER";
    public static final java.lang.String _HASP_BA_SERVER_TAMPERING_DETECTED_IN_DB = "HASP_BA_SERVER_TAMPERING_DETECTED_IN_DB";
    public static final java.lang.String _HASP_BA_SERVER_IN_STARTUP_MODE = "HASP_BA_SERVER_IN_STARTUP_MODE";
    public static final java.lang.String _HASP_BA_SERVER_INSTALLATION_CORRUPTED_MUST_REINSTALL = "HASP_BA_SERVER_INSTALLATION_CORRUPTED_MUST_REINSTALL";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_REGENERATE_V2C_ORDER_CANCELED = "HASP_BA_SERVER_CANNOT_REGENERATE_V2C_ORDER_CANCELED";
    public static final java.lang.String _HASP_BA_SERVER_CANNOT_CHANGE_PRODUCT_ID_AFTER_PRODUCT_USED = "HASP_BA_SERVER_CANNOT_CHANGE_PRODUCT_ID_AFTER_PRODUCT_USED";
    public static final java.lang.String _HASP_BA_SERVER_CRITICAL_FAULT_RESTART_SERVER = "HASP_BA_SERVER_CRITICAL_FAULT_RESTART_SERVER";
    public static final java.lang.String _HASP_BA_SERVER_FORMAT_UPDATE_NOT_BURNED = "HASP_BA_SERVER_FORMAT_UPDATE_NOT_BURNED";
    public static final java.lang.String _HASP_BA_SERVER_KEY_AND_PRODUCT_LOCKING_TYPE_MISMATCH = "HASP_BA_SERVER_KEY_AND_PRODUCT_LOCKING_TYPE_MISMATCH";
    public static final java.lang.String _HASP_BA_SERVER_KEY_NOT_CLONE_DETECTED = "HASP_BA_SERVER_KEY_NOT_CLONE_DETECTED";
    public static final java.lang.String _HASP_BA_CANNOT_RETRIEVE_PROVISIONAL_PRODUCT = "HASP_BA_CANNOT_RETRIEVE_PROVISIONAL_PRODUCT";
    public static final java.lang.String _HASP_BA_NOT_PROVISIONAL_ORDER = "HASP_BA_NOT_PROVISIONAL_ORDER";
    public static final java.lang.String _HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_TYPES = "HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_TYPES";
    public static final java.lang.String _HASP_BA_SERVER_MASTER_KEY_DISCONNECTED = "HASP_BA_SERVER_MASTER_KEY_DISCONNECTED";
    public static final java.lang.String _HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_KEYS = "HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_KEYS";
    public static final java.lang.String _HASP_BA_SERVER_MASTER_BATTERY_IS_EMPTY = "HASP_BA_SERVER_MASTER_BATTERY_IS_EMPTY";
    public static final java.lang.String _HASP_BA_SERVER_LICENSE_NOT_EXISTS = "HASP_BA_SERVER_LICENSE_NOT_EXISTS";
    public static final java.lang.String _HASP_BA_SERVER_LICENSE_IS_EXPIRED = "HASP_BA_SERVER_LICENSE_IS_EXPIRED";
    public static final HaspBssStatus HASP_BA_OK = new HaspBssStatus(_HASP_BA_OK);
    public static final HaspBssStatus HASP_BA_INVALID_HANDLE = new HaspBssStatus(_HASP_BA_INVALID_HANDLE);
    public static final HaspBssStatus HASP_BA_WEBSERVICE_LOGIN_DOESNT_EXIST = new HaspBssStatus(_HASP_BA_WEBSERVICE_LOGIN_DOESNT_EXIST);
    public static final HaspBssStatus HASP_BA_LOCAL_LOGIN_DOESNT_EXIST = new HaspBssStatus(_HASP_BA_LOCAL_LOGIN_DOESNT_EXIST);
    public static final HaspBssStatus HASP_BA_ORDER_MAX_ACTIVATIONS_EXCEEDED = new HaspBssStatus(_HASP_BA_ORDER_MAX_ACTIVATIONS_EXCEEDED);
    public static final HaspBssStatus HASP_BA_ORDER_NUMBER_OF_KEYS_EXCEEDED = new HaspBssStatus(_HASP_BA_ORDER_NUMBER_OF_KEYS_EXCEEDED);
    public static final HaspBssStatus HASP_BA_INITIAL_FDB_FAILED = new HaspBssStatus(_HASP_BA_INITIAL_FDB_FAILED);
    public static final HaspBssStatus HASP_BA_INVALID_AMOUNT_OF_KEYS = new HaspBssStatus(_HASP_BA_INVALID_AMOUNT_OF_KEYS);
    public static final HaspBssStatus HASP_BA_INVALID_MAX_ACTIVATIONS = new HaspBssStatus(_HASP_BA_INVALID_MAX_ACTIVATIONS);
    public static final HaspBssStatus HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES = new HaspBssStatus(_HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES);
    public static final HaspBssStatus HASP_BA_INVALID_FREE_PARAMETER_VALUE = new HaspBssStatus(_HASP_BA_INVALID_FREE_PARAMETER_VALUE);
    public static final HaspBssStatus HASP_BA_CANNOT_RUN_ON_64BIT_OPERATING_SYSTEM = new HaspBssStatus(_HASP_BA_CANNOT_RUN_ON_64BIT_OPERATING_SYSTEM);
    public static final HaspBssStatus HASP_BA_CANNOT_CREATE_UPDATE_WITH_PRODUCT_KEYS_ORDER = new HaspBssStatus(_HASP_BA_CANNOT_CREATE_UPDATE_WITH_PRODUCT_KEYS_ORDER);
    public static final HaspBssStatus HASP_BA_CANNOT_GENERATE_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER = new HaspBssStatus(_HASP_BA_CANNOT_GENERATE_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER);
    public static final HaspBssStatus HASP_BA_CANNOT_GET_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER = new HaspBssStatus(_HASP_BA_CANNOT_GET_PRODUCT_KEYS_FOR_NON_PRODUCT_KEYS_ORDER);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_OUT_OF_SEGMENT_BOUNDARIES = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_OUT_OF_SEGMENT_BOUNDARIES);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_NO_SUBSEGMENTS_DEFINED = new HaspBssStatus(_HASP_BA_FREE_MEMORY_NO_SUBSEGMENTS_DEFINED);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_DOESNT_EXIST = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_DOESNT_EXIST);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_NEGATIVE = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_NEGATIVE);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_ZERO_OR_NEGATIVE = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_ZERO_OR_NEGATIVE);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_GREATER_THAN_SEGMENT_SIZE = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_SIZE_IS_GREATER_THAN_SEGMENT_SIZE);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_ISNT_CORRECT = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_ISNT_CORRECT);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_SIZE_ISNT_EQUAL_TO_SIZE = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_DATA_SIZE_ISNT_EQUAL_TO_SIZE);
    public static final HaspBssStatus HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_LESS_THAN_SEGMENT_OFFSET = new HaspBssStatus(_HASP_BA_FREE_MEMORY_SUBSEGMENT_OFFSET_IS_LESS_THAN_SEGMENT_OFFSET);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_MEMORY_SUBSEGMENT_OFFSET_EXCEEDED_SEGMENT_BOUNDARIES = new HaspBssStatus(_HASP_BA_SERVER_ORDER_MEMORY_SUBSEGMENT_OFFSET_EXCEEDED_SEGMENT_BOUNDARIES);
    public static final HaspBssStatus HASP_BA_INVOKER_GENERAL_ERROR = new HaspBssStatus(_HASP_BA_INVOKER_GENERAL_ERROR);
    public static final HaspBssStatus HASP_BA_INVOKER_INVALID_HANDLE = new HaspBssStatus(_HASP_BA_INVOKER_INVALID_HANDLE);
    public static final HaspBssStatus HASP_BA_INVOKER_METHOD_NOT_DEFINED = new HaspBssStatus(_HASP_BA_INVOKER_METHOD_NOT_DEFINED);
    public static final HaspBssStatus HASP_BA_INVOKER_REQUEST_HASH_IS_NULL = new HaspBssStatus(_HASP_BA_INVOKER_REQUEST_HASH_IS_NULL);
    public static final HaspBssStatus HASP_BA_INVOKER_RESPONSE_HASH_IS_NULL = new HaspBssStatus(_HASP_BA_INVOKER_RESPONSE_HASH_IS_NULL);
    public static final HaspBssStatus HASP_BA_INVOKER_ALLOC_TAGLIST_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_ALLOC_TAGLIST_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_ENCODE_REQUEST_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_ENCODE_REQUEST_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_CONNECTION_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_CONNECTION_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_HTTP_ERROR = new HaspBssStatus(_HASP_BA_INVOKER_HTTP_ERROR);
    public static final HaspBssStatus HASP_BA_INVOKER_DECODE_RESPONSE_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_DECODE_RESPONSE_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_NO_STATUS = new HaspBssStatus(_HASP_BA_INVOKER_NO_STATUS);
    public static final HaspBssStatus HASP_BA_INVOKER_INVALID_STATUS = new HaspBssStatus(_HASP_BA_INVOKER_INVALID_STATUS);
    public static final HaspBssStatus HASP_BA_INVOKER_SERVER_ERROR = new HaspBssStatus(_HASP_BA_INVOKER_SERVER_ERROR);
    public static final HaspBssStatus HASP_BA_INVOKER_NOT_LOGGEDIN = new HaspBssStatus(_HASP_BA_INVOKER_NOT_LOGGEDIN);
    public static final HaspBssStatus HASP_BA_INVOKER_INVALID_SERVICE = new HaspBssStatus(_HASP_BA_INVOKER_INVALID_SERVICE);
    public static final HaspBssStatus HASP_BA_INVOKER_HASH_ALLOCATION_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_HASH_ALLOCATION_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_NO_SESSION_ID_RETURNED = new HaspBssStatus(_HASP_BA_INVOKER_NO_SESSION_ID_RETURNED);
    public static final HaspBssStatus HASP_BA_INVOKER_NO_SERVICES_RETURNED = new HaspBssStatus(_HASP_BA_INVOKER_NO_SERVICES_RETURNED);
    public static final HaspBssStatus HASP_BA_INVOKER_LOGIN_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_LOGIN_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_USER_IS_LOCKED = new HaspBssStatus(_HASP_BA_INVOKER_USER_IS_LOCKED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_LOAD_LIBRARY_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_LOAD_LIBRARY_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_GET_PROC_ADRESS_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_GET_PROC_ADRESS_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_INITIALIZATION_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_INITIALIZATION_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_SET_CONNECT_TIMEOUT_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_SET_CONNECT_TIMEOUT_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_SET_SEND_TIMEOUT_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_SET_SEND_TIMEOUT_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_SET_RECEIVE_TIMEOUT_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_SET_RECEIVE_TIMEOUT_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_INVALID_URL = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_INVALID_URL);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_INVALID_PORT = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_INVALID_PORT);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_INVALID_SERVER_NAME = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_INVALID_SERVER_NAME);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_CONNECT_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_CONNECT_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_OPEN_REQUEST_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_OPEN_REQUEST_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_SEND_REQUEST_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_SEND_REQUEST_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_BUFFER_REALOC_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_BUFFER_REALOC_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_INTERNET_READ_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_INTERNET_READ_FAILED);
    public static final HaspBssStatus HASP_BA_INVOKER_INET_ERROR_HTTP_QUERY_INFO_FAILED = new HaspBssStatus(_HASP_BA_INVOKER_INET_ERROR_HTTP_QUERY_INFO_FAILED);
    public static final HaspBssStatus HASP_BA_SERVER_GENERAL_SYSTEM_FAILURE = new HaspBssStatus(_HASP_BA_SERVER_GENERAL_SYSTEM_FAILURE);
    public static final HaspBssStatus HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_UPDATE = new HaspBssStatus(_HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_UPDATE);
    public static final HaspBssStatus HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_UPDATE = new HaspBssStatus(_HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_UPDATE);
    public static final HaspBssStatus HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_DELETE = new HaspBssStatus(_HASP_BA_SERVER_FEATURE_EMBEDDED_IN_PRODUCT_CANT_DELETE);
    public static final HaspBssStatus HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_DELETE = new HaspBssStatus(_HASP_BA_SERVER_FEATURE_EMBEDDED_IN_FS_CANT_DELETE);
    public static final HaspBssStatus HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_UPDATE = new HaspBssStatus(_HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_UPDATE);
    public static final HaspBssStatus HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_DELETE = new HaspBssStatus(_HASP_BA_SERVER_PRODUCT_EMBEDDED_IN_ORDER_CANT_DELETE);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_UPDATE = new HaspBssStatus(_HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_UPDATE);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_DELETE = new HaspBssStatus(_HASP_BA_SERVER_ORDER_ALREADY_DISTRIBUTED_CANT_DELETE);
    public static final HaspBssStatus HASP_BA_SERVER_CUSTOMER_ALREADY_HAVE_ORDERS = new HaspBssStatus(_HASP_BA_SERVER_CUSTOMER_ALREADY_HAVE_ORDERS);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_DOES_NOT_MATCH_ITS_TYPE_NOT_SUPPLIED = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_DOES_NOT_MATCH_ITS_TYPE_NOT_SUPPLIED);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_IS_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_IS_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_SERVER_MEMORY_SEGMENT_RELATED_TO_INVALID_MEMORY = new HaspBssStatus(_HASP_BA_SERVER_MEMORY_SEGMENT_RELATED_TO_INVALID_MEMORY);
    public static final HaspBssStatus HASP_BA_SERVER_CLIENT_CAN_NOT_BE_DELETED_ALREADY_HAS_KEYS = new HaspBssStatus(_HASP_BA_SERVER_CLIENT_CAN_NOT_BE_DELETED_ALREADY_HAS_KEYS);
    public static final HaspBssStatus HASP_BA_SERVER_DISTRIBUTIONPOINT_CAN_NOT_BE_DELETED_ALREADY_HAS_ORDERS = new HaspBssStatus(_HASP_BA_SERVER_DISTRIBUTIONPOINT_CAN_NOT_BE_DELETED_ALREADY_HAS_ORDERS);
    public static final HaspBssStatus HASP_BA_SERVER_FEATURE_NOT_EMBEDDED_IN_PRODUCT = new HaspBssStatus(_HASP_BA_SERVER_FEATURE_NOT_EMBEDDED_IN_PRODUCT);
    public static final HaspBssStatus HASP_BA_SERVER_PRODUCT_NOT_EMBEDDED_IN_ORDER = new HaspBssStatus(_HASP_BA_SERVER_PRODUCT_NOT_EMBEDDED_IN_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_NOT_DISTRIBUTED = new HaspBssStatus(_HASP_BA_SERVER_ORDER_NOT_DISTRIBUTED);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_MEMORY_SEGMENT_EXCEEDED_BOUNDARIES = new HaspBssStatus(_HASP_BA_SERVER_ORDER_MEMORY_SEGMENT_EXCEEDED_BOUNDARIES);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_CANNOT_BE_FINALIZED_PARAMETER_MISSING = new HaspBssStatus(_HASP_BA_SERVER_ORDER_CANNOT_BE_FINALIZED_PARAMETER_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_CAN_NOT_UNFINALIZE_ORDER = new HaspBssStatus(_HASP_BA_SERVER_CAN_NOT_UNFINALIZE_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_CANT_CREATE_PRODUCT_KEYS_ORDER_NOT_FINALIZED = new HaspBssStatus(_HASP_BA_SERVER_CANT_CREATE_PRODUCT_KEYS_ORDER_NOT_FINALIZED);
    public static final HaspBssStatus HASP_BA_SERVER_PRODUCTKEYS_IS_EQUAL_TO_KEYCOUNT_CANNOT_INSERT_PRODUCTKEYS = new HaspBssStatus(_HASP_BA_SERVER_PRODUCTKEYS_IS_EQUAL_TO_KEYCOUNT_CANNOT_INSERT_PRODUCTKEYS);
    public static final HaspBssStatus HASP_BA_SERVER_CANT_FORCE_COMPLETE_ORDER_NOT_DISTRIBUTED = new HaspBssStatus(_HASP_BA_SERVER_CANT_FORCE_COMPLETE_ORDER_NOT_DISTRIBUTED);
    public static final HaspBssStatus HASP_BA_SERVER_FILE_SIZE_DIFFERENT_THEN_SUPPLIED_DATA_LENGTH = new HaspBssStatus(_HASP_BA_SERVER_FILE_SIZE_DIFFERENT_THEN_SUPPLIED_DATA_LENGTH);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_IS_NOT_INITIAL = new HaspBssStatus(_HASP_BA_SERVER_ORDER_IS_NOT_INITIAL);
    public static final HaspBssStatus HASP_BA_SERVER_CAN_NOT_GET_PRODUCTKEYS_FOR_DISTRIBUTIONPOINT = new HaspBssStatus(_HASP_BA_SERVER_CAN_NOT_GET_PRODUCTKEYS_FOR_DISTRIBUTIONPOINT);
    public static final HaspBssStatus HASP_BA_SERVER_MORE_UP_TO_DATE_BATCHFILE_EXISTS = new HaspBssStatus(_HASP_BA_SERVER_MORE_UP_TO_DATE_BATCHFILE_EXISTS);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_COLLISION_ENCOUNTERED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_COLLISION_ENCOUNTERED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_ALREADY_FINALIZED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_ALREADY_FINALIZED);
    public static final HaspBssStatus HASP_BA_SERVER_WRONG_KEY_STATUS = new HaspBssStatus(_HASP_BA_SERVER_WRONG_KEY_STATUS);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_ACTIVATED_CANNOT_REMOVE_FROM_ORDER = new HaspBssStatus(_HASP_BA_SERVER_KEY_ACTIVATED_CANNOT_REMOVE_FROM_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_FORCE_COMPLETE_ORDER_NOT_FINALIZED_NOR_SUPPLIED = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_FORCE_COMPLETE_ORDER_NOT_FINALIZED_NOR_SUPPLIED);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_IS_ALREADY_ASSOCIATED_WITH_ORDER = new HaspBssStatus(_HASP_BA_SERVER_KEY_IS_ALREADY_ASSOCIATED_WITH_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_NOT_AUTHORIZED_FOR_THIS_ORDER = new HaspBssStatus(_HASP_BA_SERVER_KEY_NOT_AUTHORIZED_FOR_THIS_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_FINALIZE_ORDER_FAILED_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES = new HaspBssStatus(_HASP_BA_SERVER_FINALIZE_ORDER_FAILED_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_LOCK_TYPES);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_USE_C2V_NOT_UP_TO_DATE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_USE_C2V_NOT_UP_TO_DATE);
    public static final HaspBssStatus HASP_BA_SERVER_INCONSISTENT_COUNTERS = new HaspBssStatus(_HASP_BA_SERVER_INCONSISTENT_COUNTERS);
    public static final HaspBssStatus HASP_BA_SERVER_FAIL_CREATE_V2C_NO_ORDER_AVAILABLE_FOR_KEY = new HaspBssStatus(_HASP_BA_SERVER_FAIL_CREATE_V2C_NO_ORDER_AVAILABLE_FOR_KEY);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_EXTRACT_C2V_UNKNOWN_KEY = new HaspBssStatus(_HASP_BA_SERVER_FAILED_EXTRACT_C2V_UNKNOWN_KEY);
    public static final HaspBssStatus HASP_BA_SERVER_PRODUCTKEY_LOCKED_OR_NO_EXIST = new HaspBssStatus(_HASP_BA_SERVER_PRODUCTKEY_LOCKED_OR_NO_EXIST);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_AT_INITIAL_STATE = new HaspBssStatus(_HASP_BA_SERVER_ORDER_AT_INITIAL_STATE);
    public static final HaspBssStatus HASP_BA_SERVER_CANT_CREATE_FACTORY_OBJECT = new HaspBssStatus(_HASP_BA_SERVER_CANT_CREATE_FACTORY_OBJECT);
    public static final HaspBssStatus HASP_BA_SERVER_FILE_OUT_OF_RANGE = new HaspBssStatus(_HASP_BA_SERVER_FILE_OUT_OF_RANGE);
    public static final HaspBssStatus HASP_BA_SERVER_ACTIVATION_EXPIRED_FOR_PRODUCT_KEY = new HaspBssStatus(_HASP_BA_SERVER_ACTIVATION_EXPIRED_FOR_PRODUCT_KEY);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_ACTIVATING_SL_KEY_PRODUCT_WITH_HL_KEY_ONLY_PRODUCT = new HaspBssStatus(_HASP_BA_SERVER_FAILED_ACTIVATING_SL_KEY_PRODUCT_WITH_HL_KEY_ONLY_PRODUCT);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_ACTIVATING_HL_KEY_PRODUCT_WITH_SL_KEY_ONLY_PRODUCT = new HaspBssStatus(_HASP_BA_SERVER_FAILED_ACTIVATING_HL_KEY_PRODUCT_WITH_SL_KEY_ONLY_PRODUCT);
    public static final HaspBssStatus HASP_BA_SERVER_UNACKNOWLEDGED_ORDERS_EXIST_AND_MUST_BE_BURNED_FIRST = new HaspBssStatus(_HASP_BA_SERVER_UNACKNOWLEDGED_ORDERS_EXIST_AND_MUST_BE_BURNED_FIRST);
    public static final HaspBssStatus HASP_BA_SERVER_WRONG_DATA_FORMAT = new HaspBssStatus(_HASP_BA_SERVER_WRONG_DATA_FORMAT);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_LOCATING_CONTAINER_IDENTIFIER_IN_C2V = new HaspBssStatus(_HASP_BA_SERVER_FAILED_LOCATING_CONTAINER_IDENTIFIER_IN_C2V);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_DOESNT_EXIST = new HaspBssStatus(_HASP_BA_SERVER_KEY_DOESNT_EXIST);
    public static final HaspBssStatus HASP_BA_CANNOT_EXTRACT_FINGERPRINT_FROM_HL_KEY = new HaspBssStatus(_HASP_BA_CANNOT_EXTRACT_FINGERPRINT_FROM_HL_KEY);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_LOCATING_BATCH_IDENTIFIER_IN_C2V = new HaspBssStatus(_HASP_BA_SERVER_FAILED_LOCATING_BATCH_IDENTIFIER_IN_C2V);
    public static final HaspBssStatus HASP_BA_SERVER_NO_INPUT_PARAMETERS_WAS_SUPPLIED = new HaspBssStatus(_HASP_BA_SERVER_NO_INPUT_PARAMETERS_WAS_SUPPLIED);
    public static final HaspBssStatus HASP_BA_SERVER_WRONG_INPUT_PARAMETER = new HaspBssStatus(_HASP_BA_SERVER_WRONG_INPUT_PARAMETER);
    public static final HaspBssStatus HASP_BA_SERVER_WRONG_USERNAME_OR_PASSWORD = new HaspBssStatus(_HASP_BA_SERVER_WRONG_USERNAME_OR_PASSWORD);
    public static final HaspBssStatus HASP_BA_SERVER_CAN_NOT_PRODUCE_NON_FINALIZED_ORDER = new HaspBssStatus(_HASP_BA_SERVER_CAN_NOT_PRODUCE_NON_FINALIZED_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_PRODUCT_ALREADY_ACTIVATED_WITH_ANOTHER_KEY = new HaspBssStatus(_HASP_BA_SERVER_PRODUCT_ALREADY_ACTIVATED_WITH_ANOTHER_KEY);
    public static final HaspBssStatus HASP_BA_SERVER_INSUFFICIENT_PRIVILEGES = new HaspBssStatus(_HASP_BA_SERVER_INSUFFICIENT_PRIVILEGES);
    public static final HaspBssStatus HASP_BA_SERVER_SESSION_TIME_RUN_OUT = new HaspBssStatus(_HASP_BA_SERVER_SESSION_TIME_RUN_OUT);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_LOAD_AUTHORIZATION_FILE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_LOAD_AUTHORIZATION_FILE);
    public static final HaspBssStatus HASP_BA_SERVER_USER_LOCKED = new HaspBssStatus(_HASP_BA_SERVER_USER_LOCKED);
    public static final HaspBssStatus HASP_BA_SERVER_UNKNOWN_KEY_IN_LICENSE_PARAMETER_DATA_SET = new HaspBssStatus(_HASP_BA_SERVER_UNKNOWN_KEY_IN_LICENSE_PARAMETER_DATA_SET);
    public static final HaspBssStatus HASP_BA_SERVER_UNDEFINED_VALUE_IN_LICENSE_PARAMETER_DATA_SET = new HaspBssStatus(_HASP_BA_SERVER_UNDEFINED_VALUE_IN_LICENSE_PARAMETER_DATA_SET);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_EXPORT_DEFINED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_EXPORT_DEFINED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_COUNT_DEFINED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_COUNT_DEFINED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_SEATS_IN_CONCURRENCY_DEFINED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_SEATS_IN_CONCURRENCY_DEFINED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_CONCURRENCY_ACTION_DEFINED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_CONCURRENCY_ACTION_DEFINED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_ACTION_DEFINED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_ACTION_DEFINED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_LICENSE_TYPE_DEFINED = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_CREATE_LICENSE_XML_NO_LICENSE_TYPE_DEFINED);
    public static final HaspBssStatus HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_CONCURRENCY_ACTION_NODE_FOUND = new HaspBssStatus(_HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_CONCURRENCY_ACTION_NODE_FOUND);
    public static final HaspBssStatus HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_ACTION_NODE_FOUND = new HaspBssStatus(_HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_ACTION_NODE_FOUND);
    public static final HaspBssStatus HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_TYPE_NODE_FOUND = new HaspBssStatus(_HASP_BA_SERVER_LICENSE_XML_INCOMPLETE_NO_LICENSE_TYPE_NODE_FOUND);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_CONTAINER = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_CONTAINER);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_STREAM = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_STREAM);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_OPEN_READER_STREAM = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_OPEN_READER_STREAM);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_READ_C2V_INTO_STREAM = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_READ_C2V_INTO_STREAM);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_OPEN_WRITER_STREAM = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_OPEN_WRITER_STREAM);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_V2C_FROM_CONTAINER = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_V2C_FROM_CONTAINER);
    public static final HaspBssStatus HASP_BA_SERVER_BATCH_ID_PARAMETER_IS_MISSING = new HaspBssStatus(_HASP_BA_SERVER_BATCH_ID_PARAMETER_IS_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_KEYTYPE_PARAMETER_IS_MISSING = new HaspBssStatus(_HASP_BA_SERVER_KEYTYPE_PARAMETER_IS_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_COUNTER_PARAMETER_IS_MISSING = new HaspBssStatus(_HASP_BA_SERVER_COUNTER_PARAMETER_IS_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_HASP_SL_KEYCOLOR_OR_ID_PARAMETER_MISSING = new HaspBssStatus(_HASP_BA_SERVER_HASP_SL_KEYCOLOR_OR_ID_PARAMETER_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_PARSING_LICENSE_DATASET_TO_LICENSE_XML = new HaspBssStatus(_HASP_BA_SERVER_FAILED_PARSING_LICENSE_DATASET_TO_LICENSE_XML);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_OBJECT = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_OBJECT);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_ADD_LICENSE_TO_CONTAINER = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_ADD_LICENSE_TO_CONTAINER);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_XML = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_XML);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_MEMORY_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_ADD_MEMORY_LICENSE_TO_CONTAINER = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_ADD_MEMORY_LICENSE_TO_CONTAINER);
    public static final HaspBssStatus HASP_BA_SERVER_C2V_PARAMETER_IS_MISSING = new HaspBssStatus(_HASP_BA_SERVER_C2V_PARAMETER_IS_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_FACTORY = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_FACTORY);
    public static final HaspBssStatus HASP_BA_SERVER_LICENSE_CONTAINER_INVALID = new HaspBssStatus(_HASP_BA_SERVER_LICENSE_CONTAINER_INVALID);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_PROPERTY_OBJECT = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_PROPERTY_OBJECT);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_CLASSIC_PARAMETER_MISSING = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_CLASSIC_PARAMETER_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_BATCH_PARAMETER_MISSING = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_BATCH_PARAMETER_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_ALADDIN_PARAMETER_MISSING = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_COUNTER_ALADDIN_PARAMETER_MISSING);
    public static final HaspBssStatus HASP_BA_SERVER_INVALID_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_INVALID_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_INVALID_MEMORY_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_INVALID_MEMORY_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_REMOVE_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_REMOVE_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CALCULATE_CURRENT_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CALCULATE_CURRENT_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_CURRENT_LICENSE_NOT_FOUND = new HaspBssStatus(_HASP_BA_SERVER_CURRENT_LICENSE_NOT_FOUND);
    public static final HaspBssStatus HASP_BA_SERVER_NON_SET_LICENSE_ON_CLEAN_KEY = new HaspBssStatus(_HASP_BA_SERVER_NON_SET_LICENSE_ON_CLEAN_KEY);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCH_ID_FROM_C2V = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCH_ID_FROM_C2V);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCHID = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_EXTRACT_BATCHID);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_EXTRACT_HASPID = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_EXTRACT_HASPID);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_APPLY_ADD_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_APPLY_ADD_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_INCONSISTENT_FEATURE_HISTORY = new HaspBssStatus(_HASP_BA_SERVER_INCONSISTENT_FEATURE_HISTORY);
    public static final HaspBssStatus HASP_BA_SERVER_UNKNOWN_CONCURRENCY_TYPE = new HaspBssStatus(_HASP_BA_SERVER_UNKNOWN_CONCURRENCY_TYPE);
    public static final HaspBssStatus HASP_BA_SERVER_LICENSE_DATASET_PARAMETER_NOT_DEFINED = new HaspBssStatus(_HASP_BA_SERVER_LICENSE_DATASET_PARAMETER_NOT_DEFINED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_GET_XML_ROOT_ELEMENT = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_GET_XML_ROOT_ELEMENT);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_XML_DOCUMENT_OBJECT = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_XML_DOCUMENT_OBJECT);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_CREATE_DOM_PARSER = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_CREATE_DOM_PARSER);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_XML_ELEMENT = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_XML_ELEMENT);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_DATASET = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_DATASET);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_DATASET_OF_LICENSE_PARAMETERS = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_DATASET_OF_LICENSE_PARAMETERS);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_EXTRACT_LICENSE_TYPE_FROM_DATASET = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_EXTRACT_LICENSE_TYPE_FROM_DATASET);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_XML = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE_XML);
    public static final HaspBssStatus HASP_BA_SERVER_IDL_FILE_NOT_FOUND = new HaspBssStatus(_HASP_BA_SERVER_IDL_FILE_NOT_FOUND);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_REQUIRED = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_REQUIRED);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_LENGTH_EXCEEDED = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_LENGTH_EXCEEDED);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_DIDNT_MATCH_MASK_OR_VALIDATION_SUBROUTINE = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_DIDNT_MATCH_MASK_OR_VALIDATION_SUBROUTINE);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_CANT_BE_EMPTY = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_CANT_BE_EMPTY);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST_IN_DB = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_DOES_NOT_EXIST_IN_DB);
    public static final HaspBssStatus HASP_BA_SERVER_PARAMETER_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_SERVER_PARAMETER_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_SERVER_NO_DATA_FOUND = new HaspBssStatus(_HASP_BA_SERVER_NO_DATA_FOUND);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CONNECT_ALADDIN_MASTER = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CONNECT_ALADDIN_MASTER);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CONNECT_MASTERS_FEATURE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CONNECT_MASTERS_FEATURE);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_PRODUCTS = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_PRODUCTS);
    public static final HaspBssStatus HASP_BA_SERVER_ACTION_ON_DISABLED_C2V = new HaspBssStatus(_HASP_BA_SERVER_ACTION_ON_DISABLED_C2V);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_CLEAR_HL_KEY = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_CLEAR_HL_KEY);
    public static final HaspBssStatus HASP_BA_SERVER_INCOMPATIBLE_VERSION = new HaspBssStatus(_HASP_BA_SERVER_INCOMPATIBLE_VERSION);
    public static final HaspBssStatus HASP_BA_INIT_INVOKER_FAILED = new HaspBssStatus(_HASP_BA_INIT_INVOKER_FAILED);
    public static final HaspBssStatus HASP_BA_NO_BATCHES = new HaspBssStatus(_HASP_BA_NO_BATCHES);
    public static final HaspBssStatus HASP_BA_NO_USERS = new HaspBssStatus(_HASP_BA_NO_USERS);
    public static final HaspBssStatus HASP_BA_NO_ROLES = new HaspBssStatus(_HASP_BA_NO_ROLES);
    public static final HaspBssStatus HASP_BA_NO_FEATURES = new HaspBssStatus(_HASP_BA_NO_FEATURES);
    public static final HaspBssStatus HASP_BA_NO_FEATURESETS = new HaspBssStatus(_HASP_BA_NO_FEATURESETS);
    public static final HaspBssStatus HASP_BA_NO_PRODUCTS = new HaspBssStatus(_HASP_BA_NO_PRODUCTS);
    public static final HaspBssStatus HASP_BA_NO_PRODUCT_FEATURES = new HaspBssStatus(_HASP_BA_NO_PRODUCT_FEATURES);
    public static final HaspBssStatus HASP_BA_NO_PRODUCT_FEATURESETS = new HaspBssStatus(_HASP_BA_NO_PRODUCT_FEATURESETS);
    public static final HaspBssStatus HASP_BA_NO_ORDERS = new HaspBssStatus(_HASP_BA_NO_ORDERS);
    public static final HaspBssStatus HASP_BA_NO_MEMORIES = new HaspBssStatus(_HASP_BA_NO_MEMORIES);
    public static final HaspBssStatus HASP_BA_NO_MEMORY_DOMAIN_OBJECTS = new HaspBssStatus(_HASP_BA_NO_MEMORY_DOMAIN_OBJECTS);
    public static final HaspBssStatus HASP_BA_NO_MEMORY_SEGMENTS = new HaspBssStatus(_HASP_BA_NO_MEMORY_SEGMENTS);
    public static final HaspBssStatus HASP_BA_NO_CUSTOMERS = new HaspBssStatus(_HASP_BA_NO_CUSTOMERS);
    public static final HaspBssStatus HASP_BA_NO_DOMAIN_OBJECTS = new HaspBssStatus(_HASP_BA_NO_DOMAIN_OBJECTS);
    public static final HaspBssStatus HASP_BA_NO_DISTRIBUTION_POINTS = new HaspBssStatus(_HASP_BA_NO_DISTRIBUTION_POINTS);
    public static final HaspBssStatus HASP_BA_NO_KEYS = new HaspBssStatus(_HASP_BA_NO_KEYS);
    public static final HaspBssStatus HASP_BA_NO_KEY_TYPES = new HaspBssStatus(_HASP_BA_NO_KEY_TYPES);
    public static final HaspBssStatus HASP_BA_NO_DEVICE_TYPES = new HaspBssStatus(_HASP_BA_NO_DEVICE_TYPES);
    public static final HaspBssStatus HASP_BA_NO_PRODUCT_KEYS = new HaspBssStatus(_HASP_BA_NO_PRODUCT_KEYS);
    public static final HaspBssStatus HASP_BA_NO_ACTIVITIES = new HaspBssStatus(_HASP_BA_NO_ACTIVITIES);
    public static final HaspBssStatus HASP_BA_INVALID_INPUT = new HaspBssStatus(_HASP_BA_INVALID_INPUT);
    public static final HaspBssStatus HASP_BA_INVALID_BATCH_ID = new HaspBssStatus(_HASP_BA_INVALID_BATCH_ID);
    public static final HaspBssStatus HASP_BA_FEATURESET_NOT_FREE = new HaspBssStatus(_HASP_BA_FEATURESET_NOT_FREE);
    public static final HaspBssStatus HASP_BA_ORDER_NOT_FREE = new HaspBssStatus(_HASP_BA_ORDER_NOT_FREE);
    public static final HaspBssStatus HASP_BA_BATCH_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_BATCH_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_ROLE_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_ROLE_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_CUSTOMER_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_CUSTOMER_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_FEATURE_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_FEATURE_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_FEATURESET_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_FEATURESET_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_FEATURE_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_FEATURE_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_FEATURESET_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_FEATURESET_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_ORDER_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_ORDER_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_MEMORY_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_MEMORY_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_MEMORY_SEGMENT_ALREADY_EXIST = new HaspBssStatus(_HASP_BA_MEMORY_SEGMENT_ALREADY_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_FEATURE_CORRUPTED = new HaspBssStatus(_HASP_BA_PRODUCT_FEATURE_CORRUPTED);
    public static final HaspBssStatus HASP_BA_PRODUCT_FEATURESET_CORRUPTED = new HaspBssStatus(_HASP_BA_PRODUCT_FEATURESET_CORRUPTED);
    public static final HaspBssStatus HASP_BA_BATCH_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_BATCH_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_FEATURE_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_FEATURE_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_FEATURESET_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_FEATURESET_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_FEATURE_LICENSE_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_FEATURE_LICENSE_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_FEATURE_FREE_PARAMETER_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_FEATURE_FREE_PARAMETER_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_FEATURE_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_FEATURE_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_ACTION_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_ACTION_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_SEQUENCE_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_SEQUENCE_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_FEATURESET_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_FEATURESET_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_ORDER_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_ORDER_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_ORDER_PRODUCT_NOT_EXIST = new HaspBssStatus(_HASP_BA_ORDER_PRODUCT_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_USER_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_USER_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_MEMORY_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_MEMORY_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_MEMORY_SEGMENTS_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_MEMORY_SEGMENTS_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_CUSTOMER_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_CUSTOMER_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_KEY_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_KEY_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_PRODUCT_LOCKED_IN_EDIT = new HaspBssStatus(_HASP_BA_PRODUCT_LOCKED_IN_EDIT);
    public static final HaspBssStatus HASP_BA_ORDER_LOCKED_IN_EDIT = new HaspBssStatus(_HASP_BA_ORDER_LOCKED_IN_EDIT);
    public static final HaspBssStatus HASP_BA_MEMORY_LOCKED_IN_EDIT = new HaspBssStatus(_HASP_BA_MEMORY_LOCKED_IN_EDIT);
    public static final HaspBssStatus HASP_BA_USER_LOCKED_IN_EDIT = new HaspBssStatus(_HASP_BA_USER_LOCKED_IN_EDIT);
    public static final HaspBssStatus HASP_BA_CUSTOMER_LOCKED_IN_EDIT = new HaspBssStatus(_HASP_BA_CUSTOMER_LOCKED_IN_EDIT);
    public static final HaspBssStatus HASP_BA_PRODUCT_NOT_IN_EDIT_MODE = new HaspBssStatus(_HASP_BA_PRODUCT_NOT_IN_EDIT_MODE);
    public static final HaspBssStatus HASP_BA_ORDER_NOT_IN_EDIT_MODE = new HaspBssStatus(_HASP_BA_ORDER_NOT_IN_EDIT_MODE);
    public static final HaspBssStatus HASP_BA_MEMORY_NOT_IN_EDIT_MODE = new HaspBssStatus(_HASP_BA_MEMORY_NOT_IN_EDIT_MODE);
    public static final HaspBssStatus HASP_BA_USER_NOT_IN_EDIT_MODE = new HaspBssStatus(_HASP_BA_USER_NOT_IN_EDIT_MODE);
    public static final HaspBssStatus HASP_BA_CUSTOMER_NOT_IN_EDIT_MODE = new HaspBssStatus(_HASP_BA_CUSTOMER_NOT_IN_EDIT_MODE);
    public static final HaspBssStatus HASP_BA_FEATURE_IDENTIFIER_NOT_AVAILABLE = new HaspBssStatus(_HASP_BA_FEATURE_IDENTIFIER_NOT_AVAILABLE);
    public static final HaspBssStatus HASP_BA_BATCH_NAME_IS_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_BATCH_NAME_IS_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_FEATURE_NAME_IS_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_FEATURE_NAME_IS_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_FEATURESET_NAME_IS_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_FEATURESET_NAME_IS_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_PRODUCT_NAME_IS_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_PRODUCT_NAME_IS_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_USER_NAME_IS_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_USER_NAME_IS_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_CUSTOMER_NAME_IS_NOT_UNIQUE = new HaspBssStatus(_HASP_BA_CUSTOMER_NAME_IS_NOT_UNIQUE);
    public static final HaspBssStatus HASP_BA_ORDER_NOT_COMPATIBLE_WITH_KEY = new HaspBssStatus(_HASP_BA_ORDER_NOT_COMPATIBLE_WITH_KEY);
    public static final HaspBssStatus HASP_BA_NO_KEYS_IN_ORDER = new HaspBssStatus(_HASP_BA_NO_KEYS_IN_ORDER);
    public static final HaspBssStatus HASP_BA_CANNOT_FINALIZE_ACTUAL_KEYS_COUNT_IN_UPDATE_ORDER_DOESNT_EQUAL_TO_REQUIRED_KEYS_COUNT = new HaspBssStatus(_HASP_BA_CANNOT_FINALIZE_ACTUAL_KEYS_COUNT_IN_UPDATE_ORDER_DOESNT_EQUAL_TO_REQUIRED_KEYS_COUNT);
    public static final HaspBssStatus HASP_BA_INVALID_MAX_ACTIVATION_KEYS = new HaspBssStatus(_HASP_BA_INVALID_MAX_ACTIVATION_KEYS);
    public static final HaspBssStatus HASP_BA_PRODUCT_KEY_DOES_NOT_EXIST = new HaspBssStatus(_HASP_BA_PRODUCT_KEY_DOES_NOT_EXIST);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_CHECK_IN_PROVISIONAL_C2V = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_CHECK_IN_PROVISIONAL_C2V);
    public static final HaspBssStatus HASP_BA_GENERAL_ERROR = new HaspBssStatus(_HASP_BA_GENERAL_ERROR);
    public static final HaspBssStatus HASP_BA_UNSPECIFIED = new HaspBssStatus(_HASP_BA_UNSPECIFIED);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_DOES_NOT_MATCH_ORDER = new HaspBssStatus(_HASP_BA_SERVER_KEY_DOES_NOT_MATCH_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_AND_ORDER_MISMATCH = new HaspBssStatus(_HASP_BA_SERVER_KEY_AND_ORDER_MISMATCH);
    public static final HaspBssStatus HASP_BA_SERVER_ORDER_WITH_NO_KEY_SPECIFIED = new HaspBssStatus(_HASP_BA_SERVER_ORDER_WITH_NO_KEY_SPECIFIED);
    public static final HaspBssStatus HASP_BA_SERVER_NO_KEY_MATCHES_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_NO_KEY_MATCHES_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_ADD_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_ADD_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_ADD_MEMORY = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_ADD_MEMORY);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_LICENSE);
    public static final HaspBssStatus HASP_BA_SERVER_FAILED_TO_CREATE_V2C = new HaspBssStatus(_HASP_BA_SERVER_FAILED_TO_CREATE_V2C);
    public static final HaspBssStatus HASP_BA_SERVER_VENDOR_MISMATCH_BETWEEN_ORDER_AND_C2V = new HaspBssStatus(_HASP_BA_SERVER_VENDOR_MISMATCH_BETWEEN_ORDER_AND_C2V);
    public static final HaspBssStatus HASP_BA_UNKNOWN_FORMAT_TYPE = new HaspBssStatus(_HASP_BA_UNKNOWN_FORMAT_TYPE);
    public static final HaspBssStatus HASP_BA_INVALID_KEY_ID = new HaspBssStatus(_HASP_BA_INVALID_KEY_ID);
    public static final HaspBssStatus HASP_BA_DEFINED_LICENSE_PARAMETERS_MISSING = new HaspBssStatus(_HASP_BA_DEFINED_LICENSE_PARAMETERS_MISSING);
    public static final HaspBssStatus HASP_BA_DEFINED_LICENSE_NOT_DETACHABLE = new HaspBssStatus(_HASP_BA_DEFINED_LICENSE_NOT_DETACHABLE);
    public static final HaspBssStatus HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_VIRTUAL_MACHINE = new HaspBssStatus(_HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_VIRTUAL_MACHINE);
    public static final HaspBssStatus HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_NETWORK = new HaspBssStatus(_HASP_BA_DEFINED_LICENSE_CANNOT_ACCESS_NETWORK);
    public static final HaspBssStatus HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_COUNT = new HaspBssStatus(_HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_COUNT);
    public static final HaspBssStatus HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_TYPE = new HaspBssStatus(_HASP_BA_DEFINED_LICENSE_CONTAINS_INVALID_CONCURRENCY_TYPE);
    public static final HaspBssStatus HASP_BA_DEFINED_LICENSE_DOES_NOT_ALLOW_FREE_PARAMETERS = new HaspBssStatus(_HASP_BA_DEFINED_LICENSE_DOES_NOT_ALLOW_FREE_PARAMETERS);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_CREATE_EXECUTABLE_FILE_FROM_V2C = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_CREATE_EXECUTABLE_FILE_FROM_V2C);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_INVALID_HL_KEY_TYPE = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_INVALID_HL_KEY_TYPE);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_ORDER_NOT_FINALIZED = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_RETRIEVE_KEYS_ORDER_NOT_FINALIZED);
    public static final HaspBssStatus HASP_BA_SERVER_CONSOLIDATOR_FAILED_TO_ADD_ZERO_VALUE = new HaspBssStatus(_HASP_BA_SERVER_CONSOLIDATOR_FAILED_TO_ADD_ZERO_VALUE);
    public static final HaspBssStatus HASP_BA_SERVER_CONSOLIDATOR_CONTAINS_INVALID_LICENSE_PARAMETER = new HaspBssStatus(_HASP_BA_SERVER_CONSOLIDATOR_CONTAINS_INVALID_LICENSE_PARAMETER);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_FINALIZE_WITH_ALL_FEATURES_EXCLUDED = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_FINALIZE_WITH_ALL_FEATURES_EXCLUDED);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_ADD_OBSOLETE_CUSTOMER_TO_ORDER = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_ADD_OBSOLETE_CUSTOMER_TO_ORDER);
    public static final HaspBssStatus HASP_BA_SERVER_TAMPERING_DETECTED_IN_DB = new HaspBssStatus(_HASP_BA_SERVER_TAMPERING_DETECTED_IN_DB);
    public static final HaspBssStatus HASP_BA_SERVER_IN_STARTUP_MODE = new HaspBssStatus(_HASP_BA_SERVER_IN_STARTUP_MODE);
    public static final HaspBssStatus HASP_BA_SERVER_INSTALLATION_CORRUPTED_MUST_REINSTALL = new HaspBssStatus(_HASP_BA_SERVER_INSTALLATION_CORRUPTED_MUST_REINSTALL);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_REGENERATE_V2C_ORDER_CANCELED = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_REGENERATE_V2C_ORDER_CANCELED);
    public static final HaspBssStatus HASP_BA_SERVER_CANNOT_CHANGE_PRODUCT_ID_AFTER_PRODUCT_USED = new HaspBssStatus(_HASP_BA_SERVER_CANNOT_CHANGE_PRODUCT_ID_AFTER_PRODUCT_USED);
    public static final HaspBssStatus HASP_BA_SERVER_CRITICAL_FAULT_RESTART_SERVER = new HaspBssStatus(_HASP_BA_SERVER_CRITICAL_FAULT_RESTART_SERVER);
    public static final HaspBssStatus HASP_BA_SERVER_FORMAT_UPDATE_NOT_BURNED = new HaspBssStatus(_HASP_BA_SERVER_FORMAT_UPDATE_NOT_BURNED);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_AND_PRODUCT_LOCKING_TYPE_MISMATCH = new HaspBssStatus(_HASP_BA_SERVER_KEY_AND_PRODUCT_LOCKING_TYPE_MISMATCH);
    public static final HaspBssStatus HASP_BA_SERVER_KEY_NOT_CLONE_DETECTED = new HaspBssStatus(_HASP_BA_SERVER_KEY_NOT_CLONE_DETECTED);
    public static final HaspBssStatus HASP_BA_CANNOT_RETRIEVE_PROVISIONAL_PRODUCT = new HaspBssStatus(_HASP_BA_CANNOT_RETRIEVE_PROVISIONAL_PRODUCT);
    public static final HaspBssStatus HASP_BA_NOT_PROVISIONAL_ORDER = new HaspBssStatus(_HASP_BA_NOT_PROVISIONAL_ORDER);
    public static final HaspBssStatus HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_TYPES = new HaspBssStatus(_HASP_BA_COLLISION_BETWEEN_ORDER_AND_PRODUCTS_TYPES);
    public static final HaspBssStatus HASP_BA_SERVER_MASTER_KEY_DISCONNECTED = new HaspBssStatus(_HASP_BA_SERVER_MASTER_KEY_DISCONNECTED);
    public static final HaspBssStatus HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_KEYS = new HaspBssStatus(_HASP_BA_SERVER_COULD_NOT_FINALIZE_ORDER_NO_KEYS);
    public static final HaspBssStatus HASP_BA_SERVER_MASTER_BATTERY_IS_EMPTY = new HaspBssStatus(_HASP_BA_SERVER_MASTER_BATTERY_IS_EMPTY);
    public static final HaspBssStatus HASP_BA_SERVER_LICENSE_NOT_EXISTS = new HaspBssStatus(_HASP_BA_SERVER_LICENSE_NOT_EXISTS);
    public static final HaspBssStatus HASP_BA_SERVER_LICENSE_IS_EXPIRED = new HaspBssStatus(_HASP_BA_SERVER_LICENSE_IS_EXPIRED);
    public java.lang.String getValue() { return _value_;}
    public static HaspBssStatus fromValue(java.lang.String value)
          throws java.lang.IllegalArgumentException {
        HaspBssStatus enumeration = (HaspBssStatus)
            _table_.get(value);
        if (enumeration==null) throw new java.lang.IllegalArgumentException();
        return enumeration;
    }
    public static HaspBssStatus fromString(java.lang.String value)
          throws java.lang.IllegalArgumentException {
        return fromValue(value);
    }
    public boolean equals(java.lang.Object obj) {return (obj == this);}
    public int hashCode() { return toString().hashCode();}
    public java.lang.String toString() { return _value_;}
    public java.lang.Object readResolve() throws java.io.ObjectStreamException { return fromValue(_value_);}
    public static org.apache.axis.encoding.Serializer getSerializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new org.apache.axis.encoding.ser.EnumSerializer(
            _javaType, _xmlType);
    }
    public static org.apache.axis.encoding.Deserializer getDeserializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new org.apache.axis.encoding.ser.EnumDeserializer(
            _javaType, _xmlType);
    }
    // Type metadata
    private static org.apache.axis.description.TypeDesc typeDesc =
        new org.apache.axis.description.TypeDesc(HaspBssStatus.class);

    static {
        typeDesc.setXmlType(new javax.xml.namespace.QName("http://www.aladdin.com/webservices/hasp/WebHaspBss", "HaspBssStatus"));
    }
    /**
     * Return type metadata object
     */
    public static org.apache.axis.description.TypeDesc getTypeDesc() {
        return typeDesc;
    }

}
